diff --git a/novaclient/client.py b/novaclient/client.py
index 32eb7750..a6258375 100644
--- a/novaclient/client.py
+++ b/novaclient/client.py
@@ -46,6 +46,9 @@ from novaclient.i18n import _
 from novaclient import service_catalog
 
 
+REQ_ID_HEADER = 'X-OpenStack-Request-ID'
+
+
 class TCPKeepAliveAdapter(adapters.HTTPAdapter):
     """The custom adapter used to set TCP Keep-Alive on all connections."""
     def init_poolmanager(self, *args, **kwargs):
@@ -137,12 +140,13 @@ class HTTPClient(object):
                  http_log_debug=False, auth_system='keystone',
                  auth_plugin=None, auth_token=None,
                  cacert=None, tenant_id=None, user_id=None,
-                 connection_pool=False):
+                 connection_pool=False, global_request_id=None):
         self.user = user
         self.user_id = user_id
         self.password = password
         self.projectid = projectid
         self.tenant_id = tenant_id
+        self.global_request_id = global_request_id
 
         self._connection_pool = (_ClientConnectionPool()
                                  if connection_pool else None)
@@ -347,6 +351,9 @@ class HTTPClient(object):
         kwargs.setdefault('headers', kwargs.get('headers', {}))
         kwargs['headers']['User-Agent'] = self.USER_AGENT
         kwargs['headers']['Accept'] = 'application/json'
+        if self.global_request_id:
+            kwargs['headers'].setdefault(REQ_ID_HEADER, self.global_request_id)
+
         if 'body' in kwargs:
             kwargs['headers']['Content-Type'] = 'application/json'
             kwargs['data'] = json.dumps(kwargs['body'])
@@ -713,7 +720,8 @@ def _construct_http_client(username=None, password=None, project_id=None,
                           os_cache=os_cache,
                           http_log_debug=http_log_debug,
                           cacert=cacert,
-                          connection_pool=connection_pool)
+                          connection_pool=connection_pool,
+                          global_request_id=kwargs.get('global_request_id'))
 
 
 def get_client_class(version):
